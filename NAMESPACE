# Generated by roxygen2: do not edit by hand

S3method(add_consecutive_id,data.frame)
S3method(add_group_id,data.frame)
S3method(add_row_id,data.frame)
S3method(cheapr::reconstruct,fastplyr_grouped_df)
S3method(cheapr::reconstruct,grouped_df)
S3method(collapse::GRP,Interval)
S3method(collapse::GRP,NULL)
S3method(collapse::GRP,integer64)
S3method(collapse::GRP,list)
S3method(collapse::GRP,vctrs_rcrd)
S3method(f_rename,data.frame)
S3method(f_rename,grouped_df)
S3method(f_select,data.frame)
S3method(f_select,grouped_df)
S3method(group_collapse,data.frame)
S3method(group_collapse,grouped_df)
S3method(group_id,"NULL")
S3method(group_id,GRP)
S3method(group_id,Interval)
S3method(group_id,default)
S3method(group_id,factor)
S3method(group_id,integer64)
S3method(group_id,list)
S3method(group_id,vctrs_rcrd)
S3method(row_id,GRP)
S3method(row_id,default)
export("%>%")
export(add_consecutive_id)
export(add_group_id)
export(add_row_id)
export(as_tbl)
export(crossing)
export(desc)
export(f_anti_join)
export(f_arrange)
export(f_bind_cols)
export(f_bind_rows)
export(f_complete)
export(f_consecutive_id)
export(f_count)
export(f_cross_join)
export(f_deframe)
export(f_distinct)
export(f_duplicates)
export(f_enframe)
export(f_expand)
export(f_fill)
export(f_filter)
export(f_full_join)
export(f_group_by)
export(f_group_data)
export(f_group_indices)
export(f_group_keys)
export(f_group_rows)
export(f_group_size)
export(f_group_vars)
export(f_inner_join)
export(f_left_join)
export(f_mutate)
export(f_n_groups)
export(f_nest_by)
export(f_pull)
export(f_reframe)
export(f_rename)
export(f_right_join)
export(f_rowwise)
export(f_select)
export(f_semi_join)
export(f_slice)
export(f_slice_head)
export(f_slice_max)
export(f_slice_min)
export(f_slice_sample)
export(f_slice_tail)
export(f_summarise)
export(f_summarize)
export(f_ungroup)
export(f_union)
export(f_union_all)
export(group_by_order_default)
export(group_id)
export(group_ordered)
export(list_tidy)
export(nesting)
export(new_tbl)
export(nothing)
export(remove_rows_if_all_na)
export(remove_rows_if_any_na)
export(row_id)
export(tidy_quantiles)
importFrom(dplyr,.data)
importFrom(dplyr,across)
importFrom(dplyr,all_of)
importFrom(lifecycle,deprecated)
importFrom(magrittr,"%>%")
useDynLib(fastplyr, .registration = TRUE)
